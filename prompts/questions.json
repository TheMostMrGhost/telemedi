{
    "initial_questions": {
      "tasks": "You will be provided some templates. Acting as a guide for a new student, modify them based on the thing that user answered to the question 'Which subject would you like to learn' and additional information provided in 'About me'. In particular, its necessary to replace text enclosed in '[' and ']', but if you want you can modify more. You cannot modify subject of the question, but only its form.",
      "templates": [
        "What is your current level of knowledge or experience in [chosen subject]?",
        "Are you familiar with any programming languages commonly used in [chosen subject], such as [relevant languages]?",
        "Do you have any background in [relevant fields or concepts related to the chosen subject]?",
        "Are you looking to learn [chosen subject] theory, practical implementation, or both?",
        "What are your specific goals or objectives for learning [chosen subject]? (e.g., gaining a deep understanding, acquiring practical skills, preparing for a certification)",
        "Are there any particular subtopics or areas within [chosen subject] that you are most interested in exploring?",
        "Do you prefer a structured learning approach with clear milestones and progress tracking, or do you prefer a more flexible and self-directed learning style?",
        "Are there any specific resources, such as textbooks, online courses, or tutorial series, that you already have in mind or prefer to use?"
      ],
    },
    "long_term_plan" : {
      "tasks": "Based on the input of user, design a log term (i.e. few weeks, or other amount that user provided) plan of learning. Your blan should be divided into stages, they can be quite general. You have to take into account things that your student likes. In addition you pick learning materials, like textbooks or videos, based on what user likes. You can offer a choice but you have to be specyfic, so textbook should be named by title and author, not some vague definition. You will be shown some examples",
      "templates": [
        "Strengthen Foundations:\nStart with Andrew Ng's popular online course \"Machine Learning\" on platforms like Coursera or edX. It provides a comprehensive introduction to machine learning concepts, algorithms, and their applications. This course will help you grasp the fundamental principles and theory behind machine learning. Deepen Your Knowledge:\n For a more comprehensive understanding of deep learning, consider taking advanced online courses like the \"Deep Learning Specialization\" by deeplearning.ai or \"Convolutional Neural Networks for Visual Recognition\" by Stanford University, available on platforms like Coursera. These courses delve into advanced topics such as convolutional neural networks (CNNs) and recurrent neural networks (RNNs).\n Practical Implementation:\n Once you have a solid understanding of the theory, focus on practical implementation. Kaggle is a popular platform for participating in machine learning competitions and gaining hands-on experience. Choose competitions that align with your interests and work on real-world problems using machine learning techniques.\n Books and Resources:\nSupplement your learning with books such as \"Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow\" by Aurélien Géron and \"Pattern Recognition and Machine Learning\" by Christopher Bishop. These books provide in-depth coverage of machine learning algorithms and practical implementation examples.\"Projects and Applications:\n Undertake personal projects to apply your knowledge and gain practical experience. Identify specific domains or areas of interest where machine learning is widely used, such as computer vision, natural language processing, or recommendation systems. Implement machine learning algorithms on datasets related to these domains and showcase your work on platforms like GitHub."
      ],
      "sample_response": "Strengthen Foundations:\nStart with Andrew Ng's popular online course \"Machine Learning\" on platforms like Coursera or edX. It provides a comprehensive introduction to machine learning concepts, algorithms, and their applications. This course will help you grasp the fundamental principles and theory behind machine learning. Deepen Your Knowledge:\n For a more comprehensive understanding of deep learning, consider taking advanced online courses like the \"Deep Learning Specialization\" by deeplearning.ai or \"Convolutional Neural Networks for Visual Recognition\" by Stanford University, available on platforms like Coursera. These courses delve into advanced topics such as convolutional neural networks (CNNs) and recurrent neural networks (RNNs).\n Practical Implementation:\n Once you have a solid understanding of the theory, focus on practical implementation. Kaggle is a popular platform for participating in machine learning competitions and gaining hands-on experience. Choose competitions that align with your interests and work on real-world problems using machine learning techniques.\n Books and Resources:\nSupplement your learning with books such as \"Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow\" by Aurélien Géron and \"Pattern Recognition and Machine Learning\" by Christopher Bishop. These books provide in-depth coverage of machine learning algorithms and practical implementation examples.\"Projects and Applications:\n Undertake personal projects to apply your knowledge and gain practical experience. Identify specific domains or areas of interest where machine learning is widely used, such as computer vision, natural language processing, or recommendation systems. Implement machine learning algorithms on datasets related to these domains and showcase your work on platforms like GitHub."
    },
    "middle_term_plan" : {
      "tasks": "Now that you provided some general idea what to learn, you have to specify where to start. Now you can divide the material into smaller parts, for example you can take only the first two sections of a Deeplearningbook.org. Make sure that before learning a new material, your student is already familiar with concepts needed to understand it. for example, before learning what is PCA your student should know what covariance is and what is a vector space. To reach your goal you can mix courses and books, as long as this reuirement is satisfied. To do that you can modify the following templates.",
      "templates": [
        "Week 1:\n Review linear algebra for machine learning:\n Topics: Eigenvectors and eigenvalues, matrix factorization, SVD.\n Resources: Online tutorials or a concise linear algebra book.\n Week 2:\n \n Complete the \"Machine Learning\" course:\n Topics: Introduction to machine learning, linear regression, logistic regression.\n Resources: Andrew Ng's online course on platforms like Coursera or edX.\n Week 3:\n \n Deepen knowledge with advanced topics in machine learning:\n Topics: Neural networks, deep learning foundations.\n Resources: Advanced modules of the \"Machine Learning\" course or other deep learning courses on platforms like Coursera.\n Week 4:\n \n Practical implementation and projects:\n Topics: Implementing machine learning algorithms, hands-on projects.\n Resources: Kaggle competitions, practical exercises, coding tutorials.\n"
      ],
      "sample_response": "Week 1:\n Review linear algebra for machine learning:\n Topics: Eigenvectors and eigenvalues, matrix factorization, SVD.\n Resources: Online tutorials or a concise linear algebra book.\n Week 2:\n \n Complete the \"Machine Learning\" course:\n Topics: Introduction to machine learning, linear regression, logistic regression.\n Resources: Andrew Ng's online course on platforms like Coursera or edX.\n Week 3:\n \n Deepen knowledge with advanced topics in machine learning:\n Topics: Neural networks, deep learning foundations.\n Resources: Advanced modules of the \"Machine Learning\" course or other deep learning courses on platforms like Coursera.\n Week 4:\n \n Practical implementation and projects:\n Topics: Implementing machine learning algorithms, hands-on projects.\n Resources: Kaggle competitions, practical exercises, coding tutorials.\n"
    },
    "short_term_plan" : {
      "tasks": "Looks great, now can you provide me a detailed guide for my first week of learning? It should contain all topics (like \"Vector spaces\", \"mapping between vector spaces\", \"scalar products and norms\" and so on). Each topic should be scheduled for a specyfic day (but multiple can be done in one day), but in such a way that I know all requirements for a given topic, before I start to learn about it. For example, before learning about scalar products, I need to know what a vector space is. Can you do that for me? Just first week, as detailed as possible (checklist type of thing)",
      "templates" : [ 
        "Week 1: Linear Algebra for Machine Learning \n Day 1:\n Introduction to Linear Algebra:\n Learn the fundamental concepts and terminology of linear algebra.\n Understand vectors, matrices, and basic operations.\n Familiarize yourself with vector notation and matrix notation.\n Day 2:\n  Vector Spaces:\n Study the properties and characteristics of vector spaces.\n Learn about vector addition, scalar multiplication, and the zero vector.\n Understand the concept of linear independence and basis vectors.\n Day 3:\n  Mapping Between Vector Spaces:\n Explore the concept of linear transformations between vector spaces.\n Learn about matrices as representations of linear transformations.\n Understand the relationship between linear transformations and matrix operations.\n Day 4:\n  Scalar Products and Norms:\n Study scalar products and their properties.\n Understand the concept of orthogonality and orthogonal vectors.\n Learn about vector norms, including Euclidean norm and Manhattan norm.\n Day 5:\n  Eigenvalues and Eigenvectors:\n Explore eigenvalues and eigenvectors and their significance in linear algebra.\n Learn how to compute eigenvalues and eigenvectors of a matrix.\n Understand the applications of eigendecomposition in machine learning.\n Day 6-7 (Optional):\n  Additional Topics (as time permits):\n Singular Value Decomposition (SVD)\n Matrix factorization techniques (e.g., LU decomposition)\n Diagonalization of matrices\n Note: Make sure to allocate time for practice exercises and problem-solving throughout the week to reinforce your understanding of the topics covered. \n Remember, this schedule provides a guideline for your first week of learning, and the pace can be adjusted based on your individual needs and progress. It is crucial to take the time to fully comprehend each topic before moving on to the next one, as the concepts build upon one another in linear algebra. \n As you progress through the checklist, ensure that you grasp the requirements for each topic before diving into its details. This way, you'll have a solid foundation as you advance in your understanding of linear algebra for machine learning. Good luck with your first week of learning!\n"
      ],
      "sample_response": "Week 1: Linear Algebra for Machine Learning \n Day 1:\n Introduction to Linear Algebra:\n Learn the fundamental concepts and terminology of linear algebra.\n Understand vectors, matrices, and basic operations.\n Familiarize yourself with vector notation and matrix notation.\n Day 2:\n  Vector Spaces:\n Study the properties and characteristics of vector spaces.\n Learn about vector addition, scalar multiplication, and the zero vector.\n Understand the concept of linear independence and basis vectors.\n Day 3:\n  Mapping Between Vector Spaces:\n Explore the concept of linear transformations between vector spaces.\n Learn about matrices as representations of linear transformations.\n Understand the relationship between linear transformations and matrix operations.\n Day 4:\n  Scalar Products and Norms:\n Study scalar products and their properties.\n Understand the concept of orthogonality and orthogonal vectors.\n Learn about vector norms, including Euclidean norm and Manhattan norm.\n Day 5:\n  Eigenvalues and Eigenvectors:\n Explore eigenvalues and eigenvectors and their significance in linear algebra.\n Learn how to compute eigenvalues and eigenvectors of a matrix.\n Understand the applications of eigendecomposition in machine learning.\n Day 6-7 (Optional):\n  Additional Topics (as time permits):\n Singular Value Decomposition (SVD)\n Matrix factorization techniques (e.g., LU decomposition)\n Diagonalization of matrices\n Note: Make sure to allocate time for practice exercises and problem-solving throughout the week to reinforce your understanding of the topics covered. \n Remember, this schedule provides a guideline for your first week of learning, and the pace can be adjusted based on your individual needs and progress. It is crucial to take the time to fully comprehend each topic before moving on to the next one, as the concepts build upon one another in linear algebra. \n As you progress through the checklist, ensure that you grasp the requirements for each topic before diving into its details. This way, you'll have a solid foundation as you advance in your understanding of linear algebra for machine learning. Good luck with your first week of learning!\n"
    }
}
